#pragma once

#include "../preHeader.h"

namespace TextureSynthesis
{

enum TextureType
{
	TEXTYPE_1D = GL_TEXTURE_1D,
	TEXTYPE_2D = GL_TEXTURE_2D,
	TEXTYPE_3D = GL_TEXTURE_3D,
	
	TEXTYPE_RECTANGLE = GL_TEXTURE_RECTANGLE,
	TEXTYPE_TEXTURE_BUFFER = GL_TEXTURE_BUFFER,
	TEXTYPE_CUBE_MAP = GL_TEXTURE_CUBE_MAP,
	
	TEXTYPE_1D_ARRAY = GL_TEXTURE_1D_ARRAY,
	TEXTYPE_2D_ARRAY = GL_TEXTURE_2D_ARRAY,
	TEXTYPE_CUBE_MAP_ARRAY = GL_TEXTURE_CUBE_MAP_ARRAY,

	TEXTYPE_2D_MULTISAMPLE = GL_TEXTURE_2D_MULTISAMPLE,
	TEXTYPE_2D_MULTISAMPLE_ARRAY = GL_TEXTURE_2D_MULTISAMPLE_ARRAY
	//TEXTYPE_TOTAL_NUM
};

enum TexelFormat
{
	TEXELFMT_COLOR_INDEX = GL_COLOR_INDEX,
	TEXELFMT_ALPHA = GL_ALPHA,
	TEXELFMT_RGB = GL_RGB,
	TEXELFMT_RGBA = GL_RGBA,
	TEXELFMT_BGR = GL_BGR,
	TEXELFMT_BGRA = GL_BGRA,
	TEXELFMT_LUMILLANCE = GL_LUMINANCE,
	TEXELFMT_LUMILLANCE_ALPHA = GL_LUMINANCE_ALPHA,
};

enum TexelType
{
	TEXELTYPE_BYTE = GL_BYTE,
	TEXELTYPE_USIGNED_BYTE = GL_UNSIGNED_BYTE,
	TEXELTYPE_SHORT = GL_SHORT,
	TEXELTYPE_USIGNED_SHORT = GL_UNSIGNED_SHORT,
	TEXELTYPE_INT = GL_INT,
	TEXELTYPE_USIGNED_INT = GL_UNSIGNED_INT,
	TEXELTYPE_HALF_FLOAT = GL_HALF_FLOAT,
	TEXELTYPE_FLOAT = GL_FLOAT,
	TEXELTYPE_DOUBLE = GL_DOUBLE
};

enum TextureWrapMode
{
	TEXWRAP_CLAMP = GL_CLAMP,
	TEXWRAP_REPEAT = GL_REPEAT
};

enum TextureFilter
{
	TEXFILTER_NEAREST = GL_NEAREST,
	TEXFILTER_LINEAR = GL_LINEAR,
	TEXFILTER_NEAREST_MIPMAP_NEAREST = GL_NEAREST_MIPMAP_NEAREST,
	TEXFILTER_LINEAR_MIPMAP_NEAREST = GL_LINEAR_MIPMAP_NEAREST,
	TEXFILTER_NEAREST_MIPMAP_LINEAR = GL_NEAREST_MIPMAP_LINEAR,
	TEXFILTER_LINEAR_MIPMAP_LINEAR = GL_LINEAR_MIPMAP_LINEAR
};

class CTexturePropMap
{
public:
	static std::map<std::string, TextureType> s_str2TexType;
	static std::map<std::string, TexelFormat> s_str2TexelFmt;
	static std::map<std::string, TexelType> s_str2TexelType;
	static std::map<TexelFormat, int> s_fmt2ChannelNum;
	static std::map<TexelType, int> s_type2ByteNum;
};

}